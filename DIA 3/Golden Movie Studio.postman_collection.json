{
	"info": {
		"_postman_id": "5f5e6355-61f8-4452-b286-6024893d16b0",
		"name": "Golden Movie Studio",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "44517828",
		"_collection_link": "https://wallaceferreira.postman.co/workspace/Wallace-Ferreira's-Workspace~6fcc39f4-6136-441e-84b5-c3797a6747fe/collection/44517828-5f5e6355-61f8-4452-b286-6024893d16b0?action=share&source=collection_link&creator=44517828"
	},
	"item": [
		{
			"name": "POST",
			"item": [
				{
					"name": "Cadastro com sucesso",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code deve ser 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Deve validar ID, Nome e e-mail\", function () {\r",
									"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
									"});\r",
									"\r",
									"pm.test(\"Deve validar mensagem de retorno\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Cadastro realizado com sucesso\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"nome\": \"{{$randomFirstName}}\",\r\n  \"sobrenome\": \"Ferreira\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"telefone\": \"21968730232\",\r\n  \"senha\": \"W@lla1c1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/cadastro",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"cadastro"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "GET",
			"item": [
				{
					"name": "Buscar usuário por ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code deve ser 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Deve validar ID, Nome e e-mail\", function () {\r",
									"    pm.expect(pm.response.json()).to.have.property(\"id\");\r",
									"    pm.expect(pm.response.json()).to.have.property(\"nome\");\r",
									"    pm.expect(pm.response.json()).to.have.property(\"email\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/usuario/id/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"usuario",
								"id",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Buscar usuário por ID inválido",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code deve ser 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Deve validar message\", function () {\r",
									"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
									"});\r",
									"\r",
									"pm.test(\"Deve validar mensagem de retorno\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Usuário não encontrado\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/usuario/id/3",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"usuario",
								"id",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Buscar usuário por email invalido",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code deve ser 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Deve validar mensage\", function () {\r",
									"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
									"});\r",
									"\r",
									"pm.test(\"Deve validar mensagem de retorno\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Usuário não encontrado\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/usuario/email/wall@teste.com",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"usuario",
								"email",
								"wall@teste.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "Buscar usuário por email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code deve ser 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Deve validar ID, Nome e e-mail\", function () {\r",
									"    pm.expect(pm.response.json()).to.have.property(\"id\");\r",
									"    pm.expect(pm.response.json()).to.have.property(\"nome\");\r",
									"    pm.expect(pm.response.json()).to.have.property(\"email\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/usuario/email/wallace@teste.com",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"usuario",
								"email",
								"wallace@teste.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "Buscar filme com sucesso",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code deve ser 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Deve validar ID, Nome e e-mail\", function () {\r",
									"    pm.expect(pm.response.json()).to.have.property(\"id\");\r",
									"    pm.expect(pm.response.json()).to.have.property(\"titulo\");\r",
									"    pm.expect(pm.response.json()).to.have.property(\"descricao\");\r",
									"    pm.expect(pm.response.json()).to.have.property(\"ano\");\r",
									"    pm.expect(pm.response.json()).to.have.property(\"diretor\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000//busca\n",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"",
								"busca\n"
							]
						}
					},
					"response": []
				},
				{
					"name": "Buscar filme invalido",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code deve ser 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Deve validar mensage\", function () {\r",
									"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
									"});\r",
									"\r",
									"pm.test(\"Deve validar mensagem de retorno\", function () {\r",
									"    pm.expect(pm.response.json()).to.have.property(\"Filme não encontrado\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/busca?titulo=Interestellar",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"busca"
							],
							"query": [
								{
									"key": "titulo",
									"value": "Interestellar"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	]
}